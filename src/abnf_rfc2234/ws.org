
  - processing of ws and comments in abnf_grammar is not clear, and certainly ambiguous
  - some items such as DEFINED_AS can start with ws
  - a lot of elements can end with ws even if they are not wsp-type symbols eg rule
  - comments within a rule should attach to the rule itself, but
    comments after are, according to the grammar, partly attached to
    elements and partly attached to cnl in the rule production
  - effectively, the goal seems to be to allow comments in reasonable
    places, but not really bother about where they are attached
  - we can distinguish 3 types of wsp:
    - spaces, and spaces and tabs
    - with comments and newlines (CNL matches comments and newlines,
      and this is the only way newlines can be matched)
  - the first step is to make explicit where the ws is
  - STAR_CONCATENATION_REST
    - can begin with ws, but not end and refers to itself
    - CONCATENATION is REPETITION, possibly repeated and separated by ONE_STAR_CWSP
  - STAR_ALTERNATION_REST
    - ALTERNATION is CONCATNEATION possibly repeated and separated

  - after transforming the grammar to make ws processing more
    apparent, we have the following:

>    RULELIST_ELT -> 
>      RULE STAR_CWSP CNL                    {{ RE_RULE(x1) }}
>     | STAR_CWSP_CNL                       {{ RE_CWSP_CNL(c x1) }} 

  - CWSP matches at least one whitespace character; can match a
    comment, but subsequent line must start with at least one
    character of wsp
  - STAR_CWSP can be eps, or can match a comment, followed by
    whitespace at beginning of line, or multiple comments followed by
    ws at beginning of line
  - this is ambiguous in several ways:
    - a rule `rn = a b c ; comm CRLF` must have the comment attached
      to the rule (because CNL matches the crlf end of line, but
      STAR_CWSP does not match an end of line)
    - but STAR_CWSP may also match multiple comments separated by at least one whitespace
    - STAR_CWSP_CNL matches ws followed by comment followed by
      newline; thus `rn = a b c ; comm1 CRLF ; comm2 CRLF` can have
      the second comment attached to the rule, or parsed as a separate RULELIST_ELT
    - so `rn = a b c ; comm1 CRLF;comm2` must have comm2 as a separate
      rulelist_elt because it is not indented by ws
    - thus, a possible fix is to make the STAR_CWSP_CNL alternative be simply PLUS_CNL
